apply plugin: 'com.android.application'
apply plugin: 'witness'
apply plugin: 'jacoco'
apply plugin: 'com.squareup.sqldelight'
// apply plugin: 'com.github.kt3k.coveralls'

dependencies {
    // NOTE: Always use fixed version codes not dynamic ones, e.g. 0.7.3 instead of 0.7.+, see README for more information
    // NOTE: libraries are pinned to a specific build, see below

    // from local Android SDK
    compile 'com.android.support:support-v4:27.1.1'
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'com.android.support:design:27.1.1'
    compile 'com.android.support:recyclerview-v7:27.1.1'
    compile 'com.android.support:cardview-v7:27.1.1'
    compile 'com.android.support:support-annotations:27.1.1'

    // JCenter etc.
    compile 'com.journeyapps:zxing-android-embedded:3.4.0'
    compile 'com.google.zxing:core:3.3.0'
    compile 'org.commonjava.googlecode.markdown4j:markdown4j:2.2-cj-1.1'
    compile 'org.sufficientlysecure:donations:2.5'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.9.1'
    compile 'org.apache.james:apache-mime4j-core:0.8.0'
    compile 'org.apache.james:apache-mime4j-dom:0.8.0'

    // UI
    compile 'org.sufficientlysecure:html-textview:3.1'
    compile 'com.splitwise:tokenautocomplete:2.0.8@aar'
    compile 'com.jpardogo.materialtabstrip:library:1.1.1'
    compile 'com.getbase:floatingactionbutton:1.10.1'
    compile 'com.nispok:snackbar:2.11.0'
    compile 'com.cocosw:bottomsheet:1.3.1@aar'

    // RecyclerView
    compile 'com.tonicartos:superslim:0.4.13'
    compile 'eu.davidea:flexible-adapter:5.0.5'
    compile 'eu.davidea:flexible-adapter-ui:1.0.0-b5'
    compile 'eu.davidea:flexible-adapter-livedata:1.0.0-b2'

    // Material Drawer
    compile 'com.mikepenz:materialdrawer:5.6.0@aar'
    compile 'com.mikepenz:fastadapter:1.8.2'
    compile 'com.mikepenz:materialize:1.0.0'
    compile 'com.mikepenz:iconics-core:2.8.1@aar'
    compile 'com.mikepenz:google-material-typeface:2.2.0.3.original@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.6.0.3@aar'
    compile 'com.mikepenz:community-material-typeface:1.5.54.2@aar'

    // Nordpol
    compile 'com.fidesmo:nordpol-android:0.1.22'

    // libs as submodules
    implementation project(':libkeychain')
    implementation project(':openpgp-api-lib')
    implementation project(':sshauthentication-api')
    implementation project(':extern:bouncycastle:core')
    implementation project(':extern:bouncycastle:pg')
    implementation project(':extern:bouncycastle:prov')
    implementation project(':extern:minidns')
    implementation project(':KeybaseLib')
    implementation project(':safeslinger-exchange')

    implementation "android.arch.work:work-runtime:1.0.0-alpha02"

    // Unit tests in the local JVM with Robolectric
    // https://developer.android.com/training/testing/unit-testing/local-unit-tests.html
    // http://robolectric.org/getting-started/
    // http://www.vogella.com/tutorials/Robolectric/article.html
    testCompile 'junit:junit:4.12'
    testCompile ('org.robolectric:robolectric:3.6.1') {
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk16'
    }
    testCompile 'org.mockito:mockito-core:1.10.19'

    // UI testing with Espresso
    // Force usage of support libs in the test app, since they are internally used by the runner module.
    // https://github.com/googlesamples/android-testing/blob/master/ui/espresso/BasicSample/app/build.gradle#L28
    androidTestCompile 'com.android.support:support-annotations:27.1.1'
    androidTestCompile 'com.android.support:appcompat-v7:27.1.1'
    androidTestCompile 'com.android.support:design:27.1.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile ('com.android.support.test.espresso:espresso-contrib:2.2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    compile "com.jakewharton.timber:timber:4.5.1"

    compile 'org.glassfish:javax.annotation:10.0-b28'
    provided    "com.google.auto.value:auto-value:1.5"
    annotationProcessor "com.google.auto.value:auto-value:1.5"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:0.2.5"
    compile 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.5'

    compile "android.arch.lifecycle:extensions:1.0.0"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0"

    compile "android.arch.persistence:db-framework:1.0.0"
}

// Output of ./gradlew -q calculateChecksums
// Comment out the libs referenced as git submodules!
dependencyVerification {
    verify = [
        'eu.davidea:flexible-adapter-ui:7ed5327d15c823e5fcf7d6e1017d8a47d079d1adc7141858f3cb427517ef35cd',
        'com.android.support:design:7225973f7ee03765008a9c2f17a40b154c6885169fef022276e811c926a2202c',
        'com.journeyapps:zxing-android-embedded:2422d83c2c09a7b645f516c8458ececba6a7da47b94e40778d876facf495c660',
        'org.sufficientlysecure:donations:2be4183afa5e35263e37346344cfea48681f3c987e6832dd4acde227c13ccad6',
        'com.android.support:support-v4:4f41dfc3e89f2738e45c86264a85c0934d055ee8ebe2020e23c97f303b80a48b',
        'com.mikepenz:fastadapter:21d4ecb5c128bcda37b14e7998d799ed52cfc768b72cdf3d5578bb6775769ebd',
        'com.mikepenz:materialize:942ccf5e2aa1a46803aa884e8dc7bbaf2a9e8e9996a0cf92e3fe2f44a8592ba4',
        'com.android.support:appcompat-v7:0c7808fbbc5838d831e32e3c0a6f84e1f2c981deb8f11e010650f2b57923a335',
        'com.nispok:snackbar:46b5eb9d630d329e13c2ce00ee9fb115ffb66c23c72cff32ee97eedd76824c6f',
        'eu.davidea:flexible-adapter:560e940e8cf0f4ed8f632f5f89527deeda7a61cce5f02f42cc0983f7c0d2de5f',
        'com.android.support:recyclerview-v7:d735e4727878e99ef3980c10d15dc3468462fd509d4fb60cb8bd20b0f735085c',
        'com.android.support:cardview-v7:8ed955dd037d82a7b4bbcaedb4f896523c3e4c1bf3ca698ce807c350767a2886',
        'org.sufficientlysecure:html-textview:ed740adf05cae2373999c7a3047c803183d9807b2cf66162902090d7c112a832',
        'com.getbase:floatingactionbutton:3edefa511aac4d90794c7b0496aca59cff2eee1e32679247b4f85acbeee05240',
        'android.arch.persistence:db-framework:e8310c66979f8823cfe583951abfde96824b176289ba77b750a25be00d25981a',
        'com.android.support:support-media-compat:55e9837dda88b74a8c812c63a78c63fd83c6c039a8c22d318492663a493585eb',
        'com.jpardogo.materialtabstrip:library:4ee2f1211c302b45fb8c627cc5b240dc6b38b7aaaab1b8bffc81663e1b108013',
        'android.arch.lifecycle:extensions:851f718fd2afda1e7aa93537dae1a5c1fe47710db62dcd7cd24c4b3b14ef0d90',
        'com.android.support:support-fragment:ec72d6ac36a1a0e6523bbddba33d73ffad070b9b3dd246cc44d8727a41ddb5e6',
        'com.android.support:animated-vector-drawable:59670473f6e98fda792f7bef25dd7292b0a3106031c7a5e30eb020bf26f077bd',
        'com.android.support:support-core-ui:a3ae20e6d5dffba69ac97b99846d2738003af8563843d5f3c9dc4c35b4804241',
        'com.android.support:support-core-utils:61036832c54e8701aae954fc3bf96d1d80bf8d9dd531bff77d72def456ba087a',
        'com.android.support:support-vector-drawable:1c0f421114cf4627cf208776d6eb4f76340c78b7e96fe6e12b3e6eb950caf1b9',
        'com.android.support:transition:c0765b2f3c78696567ec5b3f519d22da1e3df11ac994625adf4bb4dc571caacc',
        'com.android.support:support-compat:880ce01ff5be42b233ff8ec0c61cefb7dc3dc9500fea9e24423214813ac27ea2',
        'android.arch.persistence:db:7c0a51d5fc890a8fb94a3370ff599243ec3485cca63daba3cc2bb197835dc521',
        'android.arch.lifecycle:runtime:094fd793924dd6a5136753e599ac8174a8147f4a401386b694ba7d818c223e2e',
        'android.arch.lifecycle:livedata-core:14e57ff8ffb65a80c7e72d91f2076acccdaf2970f234c6261e03a6127eb5206b',
        'android.arch.lifecycle:common:614e31cfd33255dc4d5f5d8e62cfa6be2fbbc2a35643a79dc3ed008004c30807',
        'android.arch.core:runtime:83400f7575bcfb8a2eeec64e05590f037bfaed1e56aa3a4214d20e55878445e3',
        'android.arch.core:common:d34824b794bc92ff8f647a9bb13a7c73de920de5b47075b5d2c4f0770e9b8bfd',
        'com.android.support:support-annotations:3365960206c3d2b09e845f555e7f88f8effc8d2f00b369e66c4be384029299cf',
        'com.google.zxing:core:bba7724e02a997cec38213af77133ee8e24b0d5cf5fa7ecbc16a4fa93f11ee0d',
        'org.commonjava.googlecode.markdown4j:markdown4j:28eb991f702c6d85d6cafd68c24d1ce841d1f5c995c943f25aedb433c0c13f60',
        'com.squareup.okhttp3:okhttp-urlconnection:16a410e5c4457ab381759486df6f840fdc7cc426d67433d4da1b7d65ed2b3b33',
        'com.squareup.okhttp3:okhttp:a0d01017a42bba26e507fc6d448bb36e536f4b6e612f7c42de30bbdac2b7785e',
        'org.apache.james:apache-mime4j-dom:e18717fe6d36f32e5c5f7cbeea1a9bf04645fdabc84e7e8374d9da10fd52e78d',
        'org.apache.james:apache-mime4j-core:561987f604911e1870b2b4eabf0b0658d666c66cb1e65fba3e9e4bffe63acab9',
        'com.splitwise:tokenautocomplete:f921f83ee26b5265f719b312c30452ef8e219557826c5ce5bf02e29647967939',
        'com.cocosw:bottomsheet:85bd91fd837b02ebd7a888501cb26035c7cd985a6aa87303fca249da8231a2c3',
        'eu.davidea:flexible-adapter-livedata:c8718b46ff4fbf290ea18f0c5bfe8326badeadf5fd95899a1404c561a24f48a1',
        'com.mikepenz:materialdrawer:8bba1428dcef5ad7c2decf49c612ad980b38e2f1031cbd66c152a8a104793929',
        'com.mikepenz:iconics-core:478d7e245098f7c28b5b20a0e6b1e5cb108ef3eaf595af7190bc60f91063aa3d',
        'com.mikepenz:google-material-typeface:f27c629ba5d2a90ecfbd7f221ff98cd363e1ee6be06b099b82bae490766e14a5',
        'com.mikepenz:fontawesome-typeface:ee47b7fe97b90412f01f2fcdd78f65a4edb0ab00006f5ef59ed00516baca9309',
        'com.mikepenz:community-material-typeface:d6035d261c5eba880cd7fe5dcb8cc00b09bfe6d41063b881b759e9897dc7b7c9',
        'com.fidesmo:nordpol-android:9a992eca347ff7af6e99ff48078954b44b26f26fdc5463139e340234757a24f7',
        'com.jakewharton.timber:timber:d553d3d3e883ce7d061f1b21b95d6ee0840f3bfbf6d3bd51c5671f0b0f0b0091',
        'org.glassfish:javax.annotation:339c876b928766329cc0657920366e75beb25f932b80bb3b26df6c0e687a9582',
        'com.ryanharter.auto.value:auto-value-parcel-adapter:f730534497f7de81f62f1165df65e750522fdaedabd56031ee1c2d9da2544e17',
        'com.squareup.okio:okio:734269c3ebc5090e3b23566db558f421f0b4027277c79ad5d176b8ec168bb850',
        'com.fidesmo:nordpol-core:296e71b12884a9cd28cf00ab908973bbf776a90be1f23ac897380d91604e614d',
        'android.arch.lifecycle:viewmodel:6407c93a5ea9850661dca42a0068d6f3deccefd7228ee69bae1c35d70cbc2557',
    ]
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 51100
        versionName "5.1.1"
        applicationId "org.sufficientlysecure.keychain"
        // the androidjunitrunner is broken regarding coverage, see here:
        // https://code.google.com/p/android/issues/detail?id=170607
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // this workaround runner fixes the coverage problem, BUT doesn't work
        // with android studio single test execution. use it to generate coverage
        // data, but keep the other one otherwis
        // testInstrumentationRunner "org.sufficientlysecure.keychain.JacocoWorkaroundJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions.unitTests.all {
        // log results of tests to console, useful for travis
        testLogging {
            events 'passed', 'skipped', 'failed' //, 'standardOut', 'standardError'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                          'proguard-rules-base.pro',
                          'proguard-rules-bouncycastle.pro',
                          'proguard-rules-okio.pro',
                          'proguard-rules-okhttp.pro',
                          'proguard-rules-support.pro'

            // Reference them in the java files with e.g. BuildConfig.ACCOUNT_TYPE.
            buildConfigField "String", "ACCOUNT_TYPE", "\"org.sufficientlysecure.keychain.account\""
            buildConfigField "String", "PROVIDER_CONTENT_AUTHORITY", "\"org.sufficientlysecure.keychain.provider\""

            // Reference them in .xml files.
            resValue "string", "account_type", "org.sufficientlysecure.keychain.account"
            resValue "string", "provider_content_authority", "org.sufficientlysecure.keychain.provider"

            // Github API
            buildConfigField "String", "GITHUB_CLIENT_ID", "\"c942cd81844d94e7e41b\""
            buildConfigField "String", "GITHUB_CLIENT_SECRET", "\"f1dd17e70a0614abbd9310b00a310e23c6c8edff\""
        }

        debug {
            // ProGuard disabled for debug builds, instead multidex is enabled!
            // faster consecutive build times for developing, https://github.com/open-keychain/open-keychain/pull/2247
            minifyEnabled false
            //proguardFiles = buildTypes.release.proguardFiles
            //testProguardFiles 'proguard-rules-test.pro'
            
            multiDexEnabled true

            applicationIdSuffix ".debug"

            // Reference them in the java files with e.g. BuildConfig.ACCOUNT_TYPE.
            buildConfigField "String", "ACCOUNT_TYPE", "\"org.sufficientlysecure.keychain.debug.account\""
            buildConfigField "String", "PROVIDER_CONTENT_AUTHORITY", "\"org.sufficientlysecure.keychain.debug.provider\""

            // Reference them in .xml files.
            resValue "string", "account_type", "org.sufficientlysecure.keychain.debug.account"
            resValue "string", "provider_content_authority", "org.sufficientlysecure.keychain.debug.provider"

            // Github API
            buildConfigField "String", "GITHUB_CLIENT_ID", "\"c942cd81844d94e7e41b\""
            buildConfigField "String", "GITHUB_CLIENT_SECRET", "\"f1dd17e70a0614abbd9310b00a310e23c6c8edff\""
        }

        // Workaround for http://stackoverflow.com/questions/27909613/cannot-see-parameter-value-in-android-studio-when-breakpoint-is-in-first-line-of
        debugWithTestCoverage.initWith(debug)
        debugWithTestCoverage {
            // Enable code coverage (Jacoco)
            testCoverageEnabled true
            matchingFallbacks = ['debug']    // instead use this
        }
    }

    flavorDimensions("freedom")

    productFlavors {
        google {
            dimension "freedom"
            buildConfigField "boolean", "DONATIONS_GOOGLE", "true"
            buildConfigField "String", "GOOGLE_PLAY_PUBKEY", "\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwX9SOQ/EL4u5pvbYmYMagN5DDenuSaMaVs2cVPzqxMaIHp6/9/nGuzj2/CpcB4ASd2vvfLlE9tZRkPmFTULWc4Sp4OR+JenQufZZr7Y8WGPkFyqd+dOxhIqKKLtH1QuqSyhby3gEMlWzydJY3rHXlH2Bpu65Uroawq76nynnELXNlzsCM231XWgj4HA87qxv9hSWLCpu16wKxZIX3d6mwZLZmGF+xYJAzVr291oDYYl+h6BDoIcAfmQFsv5MexNwBFO+TLVrvL0e5qdGHZxwwD1/68VSY8FxAEfM+yq7jovdVSdcXlJQjZrV5TRDdFWrtEB6njGA3YZWXP6B6MMMoQIDAQAB\""
            buildConfigField "String", "PAYPAL_USER", "null"
            buildConfigField "String", "PAYPAL_CURRENCY_CODE", "null"
            buildConfigField "String", "BITCOIN_ADDRESS", "null"
            buildConfigField "String", "FLATTR_PROJECT_URL", "null"
            buildConfigField "String", "FLATTR_URL", "null"
        }
        fdroid {
            dimension "freedom"
            buildConfigField "boolean", "DONATIONS_GOOGLE", "false"
            buildConfigField "String", "GOOGLE_PLAY_PUBKEY", "null"
            buildConfigField "String", "PAYPAL_USER", "\"android@schuermann.eu\""
            buildConfigField "String", "PAYPAL_CURRENCY_CODE", "\"EUR\""
            buildConfigField "String", "BITCOIN_ADDRESS", "\"1LY6Hs6SurATjfxnihzLMDUMUuMxvQ4aEi\""
            buildConfigField "String", "FLATTR_PROJECT_URL", "\"https://www.openkeychain.org\""
            buildConfigField "String", "FLATTR_URL", "\"flattr.com/submit/auto?fid=4vzg0p&url=https%3A%2F%2Fwww.openkeychain.org\""
        }
    }

    variantFilter { variant ->
        if(variant.buildType.name.equals('debug') && variant.getFlavors().get(0).name.equals('google')) {
            variant.setIgnore(true)
        }
    }

    /*
     * To sign release build, create file gradle.properties in ~/.gradle/ with this content:
     *
     * signingStoreLocation=/home/key.store
     * signingStorePassword=xxx
     * signingKeyAlias=alias
     * signingKeyPassword=xxx
     */
    if (project.hasProperty('signingStoreLocation') &&
            project.hasProperty('signingStorePassword') &&
            project.hasProperty('signingKeyAlias') &&
            project.hasProperty('signingKeyPassword')) {
        println "Found sign properties in gradle.properties! Signing build…"

        signingConfigs {
            release {
                storeFile file(signingStoreLocation)
                storePassword signingStorePassword
                keyAlias signingKeyAlias
                keyPassword signingKeyPassword
            }
        }

        buildTypes.release.signingConfig = signingConfigs.release
    } else {
        buildTypes.release.signingConfig = null
    }

    // NOTE: Lint is disabled because it slows down builds,
    // to enable it comment out the code at the bottom of this build.gradle
    lintOptions {
        // Do not abort build if lint finds errors
        abortOnError false

        checkAllWarnings true
        htmlReport true
        htmlOutput file('lint-report.html')
    }

    dexOptions {
        preDexLibraries true
        // dexInProcess requires much RAM, which is not available on all dev systems
        dexInProcess false
        jumboMode true
        javaMaxHeapSize "2g"
    }

    dataBinding {
        enabled true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude '.readme'
    }
}

task jacocoTestReport(type:JacocoReport, dependsOn: "testFdroidDebugWithTestCoverageUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: "${buildDir}/intermediates/classes/fdroid/debugWithTestCoverage",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*Activity*.*',
                       '**/*Fragment*.*']
    )

    sourceDirectories = files("${buildDir.parent}/src/main/java")
    additionalSourceDirs = files([
            "${buildDir}/generated/source/buildConfig/fdroid/debugWithTestCoverage",
            "${buildDir}/generated/source/r/fdroid/debugWithTestCoverage"
    ])
    executionData = fileTree(dir: "${buildDir}/jacoco", include: "**/*.exec")

    reports {
        xml.enabled true
        html.enabled true
    }
}

// Fix for: No report file available: [/home/travis/build/open-keychain/open-keychain/OpenKeychain/build/reports/cobertura/coverage.xml, /home/travis/build/open-keychain/open-keychain/OpenKeychain/build/reports/jacoco/test/jacocoTestReport.xml]
// coveralls {
    // jacocoReportPath 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
// }

// NOTE: This disables Lint!
tasks.whenTaskAdded { task ->
    if (task.name.contains('lint')) {
        task.enabled = false
    }
}

